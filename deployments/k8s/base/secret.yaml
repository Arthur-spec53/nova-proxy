apiVersion: v1
kind: Secret
metadata:
  name: nova-proxy-secrets
  namespace: nova-proxy
  labels:
    app.kubernetes.io/name: nova-proxy
    app.kubernetes.io/instance: nova-proxy
    app.kubernetes.io/component: secrets
    app.kubernetes.io/part-of: nova-proxy
type: Opaque
data:
  # 数据库密码 (base64 编码)
  # 原始值: nova_proxy_password_2024
  postgres-password: bm92YV9wcm94eV9wYXNzd29yZF8yMDI0
  
  # Redis 密码 (base64 编码)
  # 原始值: redis_password_2024
  redis-password: cmVkaXNfcGFzc3dvcmRfMjAyNA==
  
  # JWT 密钥 (base64 编码)
  # 原始值: jwt_secret_key_nova_proxy_2024_very_secure
  jwt-secret: and0X3NlY3JldF9rZXlfbm92YV9wcm94eV8yMDI0X3Zlcnlfc2VjdXJl
  
  # API 密钥 (base64 编码)
  # 原始值: api_key_nova_proxy_2024_admin
  api-key: YXBpX2tleV9ub3ZhX3Byb3h5XzIwMjRfYWRtaW4=
  
  # 加密密钥 (base64 编码)
  # 原始值: encryption_key_32_bytes_long_2024
  encryption-key: ZW5jcnlwdGlvbl9rZXlfMzJfYnl0ZXNfbG9uZ18yMDI0
  
  # TLS 私钥密码 (base64 编码)
  # 原始值: tls_key_passphrase_2024
  tls-key-passphrase: dGxzX2tleV9wYXNzcGhyYXNlXzIwMjQ=
  
  # 监控认证 (base64 编码)
  # 原始值: monitoring_user:monitoring_pass_2024
  monitoring-auth: bW9uaXRvcmluZ191c2VyOm1vbml0b3JpbmdfcGFzc18yMDI0

---
apiVersion: v1
kind: Secret
metadata:
  name: nova-proxy-tls
  namespace: nova-proxy
  labels:
    app.kubernetes.io/name: nova-proxy
    app.kubernetes.io/instance: nova-proxy
    app.kubernetes.io/component: tls
    app.kubernetes.io/part-of: nova-proxy
  annotations:
    cert-manager.io/issuer: "nova-proxy-issuer"
type: kubernetes.io/tls
data:
  # TLS 证书 (base64 编码)
  # 这里应该是实际的证书内容，示例使用占位符
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCi4uLiAoYmFzZTY0IGVuY29kZWQgY2VydGlmaWNhdGUpCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  
  # TLS 私钥 (base64 编码)
  # 这里应该是实际的私钥内容，示例使用占位符
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCi4uLiAoYmFzZTY0IGVuY29kZWQgcHJpdmF0ZSBrZXkpCi0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0=
  
  # CA 证书 (base64 编码)
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCi4uLiAoYmFzZTY0IGVuY29kZWQgQ0EgY2VydGlmaWNhdGUpCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=

---
apiVersion: v1
kind: Secret
metadata:
  name: nova-proxy-registry
  namespace: nova-proxy
  labels:
    app.kubernetes.io/name: nova-proxy
    app.kubernetes.io/instance: nova-proxy
    app.kubernetes.io/component: registry
    app.kubernetes.io/part-of: nova-proxy
type: kubernetes.io/dockerconfigjson
data:
  # Docker 镜像仓库认证信息 (base64 编码)
  # 格式: {"auths":{"registry.example.com":{"username":"user","password":"pass","auth":"base64(user:pass)"}}}
  .dockerconfigjson: eyJhdXRocyI6eyJyZWdpc3RyeS5leGFtcGxlLmNvbSI6eyJ1c2VybmFtZSI6InVzZXIiLCJwYXNzd29yZCI6InBhc3MiLCJhdXRoIjoiZFhObGNqcHdZWE56In19fQ==

---
# 用于存储敏感配置的 Secret
apiVersion: v1
kind: Secret
metadata:
  name: nova-proxy-config-secrets
  namespace: nova-proxy
  labels:
    app.kubernetes.io/name: nova-proxy
    app.kubernetes.io/instance: nova-proxy
    app.kubernetes.io/component: config-secrets
    app.kubernetes.io/part-of: nova-proxy
type: Opaque
stringData:
  # 敏感配置文件
  secrets.yaml: |
    # Nova Proxy 敏感配置
    database:
      postgres:
        password: "nova_proxy_password_2024"
        ssl_cert: "/etc/ssl/postgres/client.crt"
        ssl_key: "/etc/ssl/postgres/client.key"
        ssl_ca: "/etc/ssl/postgres/ca.crt"
    
    cache:
      redis:
        password: "redis_password_2024"
        tls_cert: "/etc/ssl/redis/client.crt"
        tls_key: "/etc/ssl/redis/client.key"
        tls_ca: "/etc/ssl/redis/ca.crt"
    
    security:
      jwt:
        secret_key: "jwt_secret_key_nova_proxy_2024_very_secure"
        private_key: "/etc/ssl/jwt/private.key"
        public_key: "/etc/ssl/jwt/public.key"
      
      api:
        keys:
          admin: "api_key_nova_proxy_2024_admin"
          readonly: "api_key_nova_proxy_2024_readonly"
          monitoring: "api_key_nova_proxy_2024_monitoring"
      
      encryption:
        key: "encryption_key_32_bytes_long_2024"
        algorithm: "AES-256-GCM"
    
    monitoring:
      prometheus:
        basic_auth:
          username: "prometheus"
          password: "prometheus_password_2024"
      
      grafana:
        admin_password: "grafana_admin_password_2024"
        secret_key: "grafana_secret_key_2024"
      
      jaeger:
        auth_token: "jaeger_auth_token_2024"
    
    external_services:
      smtp:
        username: "smtp_user@example.com"
        password: "smtp_password_2024"
      
      slack:
        webhook_url: "https://hooks.slack.com/services/YOUR_WORKSPACE/YOUR_CHANNEL/YOUR_WEBHOOK_TOKEN"
        bot_token: "xoxb-YOUR-SLACK-BOT-TOKEN-HERE"
      
      pagerduty:
        integration_key: "pagerduty_integration_key_2024"
        api_token: "pagerduty_api_token_2024"

---
# 用于 ServiceAccount 的 Secret
apiVersion: v1
kind: Secret
metadata:
  name: nova-proxy-sa-token
  namespace: nova-proxy
  labels:
    app.kubernetes.io/name: nova-proxy
    app.kubernetes.io/instance: nova-proxy
    app.kubernetes.io/component: serviceaccount
    app.kubernetes.io/part-of: nova-proxy
  annotations:
    kubernetes.io/service-account.name: nova-proxy
type: kubernetes.io/service-account-token

---
# 用于备份的 Secret
apiVersion: v1
kind: Secret
metadata:
  name: nova-proxy-backup
  namespace: nova-proxy
  labels:
    app.kubernetes.io/name: nova-proxy
    app.kubernetes.io/instance: nova-proxy
    app.kubernetes.io/component: backup
    app.kubernetes.io/part-of: nova-proxy
type: Opaque
stringData:
  # S3/MinIO 配置
  s3-config.yaml: |
    endpoint: "https://s3.example.com"
    region: "us-east-1"
    bucket: "nova-proxy-backups"
    access_key: "backup_access_key_2024"
    secret_key: "backup_secret_key_2024"
    ssl_verify: true
    
  # 备份加密密钥
  backup-encryption-key: "backup_encryption_key_32_bytes_2024"
  
  # 备份签名密钥
  backup-signing-key: "backup_signing_key_2024"

---
# 用于证书管理的 Secret (cert-manager)
apiVersion: v1
kind: Secret
metadata:
  name: nova-proxy-cert-issuer
  namespace: nova-proxy
  labels:
    app.kubernetes.io/name: nova-proxy
    app.kubernetes.io/instance: nova-proxy
    app.kubernetes.io/component: cert-issuer
    app.kubernetes.io/part-of: nova-proxy
type: Opaque
stringData:
  # ACME 账户私钥
  acme-account-key.pem: |
    -----BEGIN PRIVATE KEY-----
    ... (ACME account private key)
    -----END PRIVATE KEY-----
  
  # DNS 提供商 API 密钥
  dns-api-key: "dns_provider_api_key_2024"
  
  # 证书颁发机构配置
  ca-issuer.yaml: |
    ca_cert: "/etc/ssl/ca/ca.crt"
    ca_key: "/etc/ssl/ca/ca.key"
    ca_key_passphrase: "ca_key_passphrase_2024"