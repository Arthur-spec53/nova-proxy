apiVersion: v1
kind: ServiceAccount
metadata:
  name: nova-proxy
  namespace: nova-proxy
  labels:
    app.kubernetes.io/name: nova-proxy
    app.kubernetes.io/instance: nova-proxy
    app.kubernetes.io/component: serviceaccount
    app.kubernetes.io/part-of: nova-proxy
    app.kubernetes.io/version: "1.0.0"
  annotations:
    # 自动挂载服务账户令牌
    kubernetes.io/enforce-mountable-secrets: "true"
    # 描述
    description: "Service account for Nova Proxy application"
automountServiceAccountToken: true
imagePullSecrets:
  - name: nova-proxy-registry
secrets:
  - name: nova-proxy-sa-token

---
# ClusterRole 定义集群级别的权限
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: nova-proxy-cluster-role
  labels:
    app.kubernetes.io/name: nova-proxy
    app.kubernetes.io/instance: nova-proxy
    app.kubernetes.io/component: rbac
    app.kubernetes.io/part-of: nova-proxy
rules:
  # 读取节点信息（用于负载均衡和健康检查）
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch"]
  
  # 读取服务和端点信息（用于服务发现）
  - apiGroups: [""]
    resources: ["services", "endpoints"]
    verbs: ["get", "list", "watch"]
  
  # 读取 Ingress 信息（用于路由配置）
  - apiGroups: ["networking.k8s.io"]
    resources: ["ingresses"]
    verbs: ["get", "list", "watch"]
  
  # 读取 NetworkPolicy（用于网络安全）
  - apiGroups: ["networking.k8s.io"]
    resources: ["networkpolicies"]
    verbs: ["get", "list", "watch"]
  
  # 读取自定义资源（如果使用 CRD）
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["get", "list", "watch"]

---
# Role 定义命名空间级别的权限
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: nova-proxy-role
  namespace: nova-proxy
  labels:
    app.kubernetes.io/name: nova-proxy
    app.kubernetes.io/instance: nova-proxy
    app.kubernetes.io/component: rbac
    app.kubernetes.io/part-of: nova-proxy
rules:
  # 管理 ConfigMap（用于动态配置更新）
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "list", "watch", "create", "update", "patch"]
    resourceNames: ["nova-proxy-config", "nova-proxy-env", "nova-proxy-nginx"]
  
  # 读取 Secret（用于获取敏感配置）
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch"]
    resourceNames: 
      - "nova-proxy-secrets"
      - "nova-proxy-tls"
      - "nova-proxy-config-secrets"
      - "nova-proxy-backup"
      - "nova-proxy-cert-issuer"
  
  # 管理 Pod（用于健康检查和重启）
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch", "delete"]
  
  # 读取 Pod 日志（用于调试）
  - apiGroups: [""]
    resources: ["pods/log"]
    verbs: ["get", "list"]
  
  # 执行 Pod 命令（用于调试和维护）
  - apiGroups: [""]
    resources: ["pods/exec"]
    verbs: ["create"]
  
  # 管理 Service（用于服务发现）
  - apiGroups: [""]
    resources: ["services"]
    verbs: ["get", "list", "watch", "create", "update", "patch"]
  
  # 管理 Deployment（用于滚动更新）
  - apiGroups: ["apps"]
    resources: ["deployments", "replicasets"]
    verbs: ["get", "list", "watch", "update", "patch"]
  
  # 管理 HorizontalPodAutoscaler（用于自动扩缩容）
  - apiGroups: ["autoscaling"]
    resources: ["horizontalpodautoscalers"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  
  # 管理 PodDisruptionBudget（用于维护窗口）
  - apiGroups: ["policy"]
    resources: ["poddisruptionbudgets"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  
  # 创建事件（用于审计和监控）
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "patch"]
  
  # 管理 ServiceMonitor（用于 Prometheus 监控）
  - apiGroups: ["monitoring.coreos.com"]
    resources: ["servicemonitors"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  
  # 管理 PrometheusRule（用于告警规则）
  - apiGroups: ["monitoring.coreos.com"]
    resources: ["prometheusrules"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

---
# ClusterRoleBinding 绑定集群角色
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: nova-proxy-cluster-role-binding
  labels:
    app.kubernetes.io/name: nova-proxy
    app.kubernetes.io/instance: nova-proxy
    app.kubernetes.io/component: rbac
    app.kubernetes.io/part-of: nova-proxy
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nova-proxy-cluster-role
subjects:
  - kind: ServiceAccount
    name: nova-proxy
    namespace: nova-proxy

---
# RoleBinding 绑定命名空间角色
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: nova-proxy-role-binding
  namespace: nova-proxy
  labels:
    app.kubernetes.io/name: nova-proxy
    app.kubernetes.io/instance: nova-proxy
    app.kubernetes.io/component: rbac
    app.kubernetes.io/part-of: nova-proxy
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: nova-proxy-role
subjects:
  - kind: ServiceAccount
    name: nova-proxy
    namespace: nova-proxy

---
# 监控服务账户
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nova-proxy-monitoring
  namespace: nova-proxy
  labels:
    app.kubernetes.io/name: nova-proxy
    app.kubernetes.io/instance: nova-proxy
    app.kubernetes.io/component: monitoring
    app.kubernetes.io/part-of: nova-proxy
  annotations:
    description: "Service account for Nova Proxy monitoring components"
automountServiceAccountToken: true

---
# 监控角色
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: nova-proxy-monitoring-role
  namespace: nova-proxy
  labels:
    app.kubernetes.io/name: nova-proxy
    app.kubernetes.io/instance: nova-proxy
    app.kubernetes.io/component: monitoring
    app.kubernetes.io/part-of: nova-proxy
rules:
  # 读取指标
  - apiGroups: [""]
    resources: ["pods", "services", "endpoints"]
    verbs: ["get", "list", "watch"]
  
  # 读取配置
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "list", "watch"]
  
  # 管理 ServiceMonitor
  - apiGroups: ["monitoring.coreos.com"]
    resources: ["servicemonitors", "prometheusrules"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

---
# 监控角色绑定
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: nova-proxy-monitoring-role-binding
  namespace: nova-proxy
  labels:
    app.kubernetes.io/name: nova-proxy
    app.kubernetes.io/instance: nova-proxy
    app.kubernetes.io/component: monitoring
    app.kubernetes.io/part-of: nova-proxy
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: nova-proxy-monitoring-role
subjects:
  - kind: ServiceAccount
    name: nova-proxy-monitoring
    namespace: nova-proxy

---
# 备份服务账户
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nova-proxy-backup
  namespace: nova-proxy
  labels:
    app.kubernetes.io/name: nova-proxy
    app.kubernetes.io/instance: nova-proxy
    app.kubernetes.io/component: backup
    app.kubernetes.io/part-of: nova-proxy
  annotations:
    description: "Service account for Nova Proxy backup operations"
automountServiceAccountToken: true

---
# 备份角色
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: nova-proxy-backup-role
  namespace: nova-proxy
  labels:
    app.kubernetes.io/name: nova-proxy
    app.kubernetes.io/instance: nova-proxy
    app.kubernetes.io/component: backup
    app.kubernetes.io/part-of: nova-proxy
rules:
  # 读取配置和密钥
  - apiGroups: [""]
    resources: ["configmaps", "secrets"]
    verbs: ["get", "list"]
  
  # 读取 Pod 信息
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list"]
  
  # 执行备份命令
  - apiGroups: [""]
    resources: ["pods/exec"]
    verbs: ["create"]
  
  # 创建备份任务
  - apiGroups: ["batch"]
    resources: ["jobs", "cronjobs"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

---
# 备份角色绑定
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: nova-proxy-backup-role-binding
  namespace: nova-proxy
  labels:
    app.kubernetes.io/name: nova-proxy
    app.kubernetes.io/instance: nova-proxy
    app.kubernetes.io/component: backup
    app.kubernetes.io/part-of: nova-proxy
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: nova-proxy-backup-role
subjects:
  - kind: ServiceAccount
    name: nova-proxy-backup
    namespace: nova-proxy